{
  "openapi": "3.0.0",
  "info": {
    "title": "TCC API DOCS",
    "description": "Api Documentation",
    "version": "1.0.0",
    "contact": {
      "email": "alancintra7@gmail.com, tukmax@gmail.com, cgsalbuquerque@gmail.com"
    }
  },
  "paths": {
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Create User",
        "description": "Create a new User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              },
              "example": {
                "name": "Alan Cintra",
                "email": "alancintra7@gmail.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "User already exists"
          }
        }
      }
    },
    "users/{id}": {
      "put": {
        "tags": ["User"],
        "summary": "Update User",
        "description": "Update User",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "name": "Alan Cintra Gomes",
                "email":"alancintra7@gmail.com"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401": {
            "description": "Missing or Invalid JWT Token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["User"],
        "summary": "Logged User Data",
        "description": "Logged User Data",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401": {
            "description": "Missing or Invalid JWT Token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["User"],
        "summary": "Update User Avatar",
        "description": "Update User Avatar",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "User not Found"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Session"],
        "summary": "Authenticate",
        "description": "Authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "example": {
                "email": "alancintra7@gmail.com",
                "password": "123456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Incorrect e-mail or password"
          }
        }
      }
    },
    "/sessions/refresh-token": {
      "post": {
        "tags": ["Session"],
        "summary": "Refresh Token",
        "description": "Refresh Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Invalid Refresh Token"
          }
        }
      }
    },
    "/password/forgot": {
      "post": {
        "tags": ["Password"],
        "summary": "Send Forgot Password Mail",
        "description": "Send Forgot Password Mail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "example": {
                  "email": "alancintra7@gmail.com"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/password/reset": {
      "post": {
        "tags": ["Password"],
        "summary": "Reset User Password",
        "description": "Reset User Password",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Reset Password Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "password": "123456"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Token expired"
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
